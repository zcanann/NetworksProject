<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="110:/root/workspace/Project1/src/Node.nc">
      <from><interface-ref name="doModerateEvents" scoped="" ref="0x4042a438"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/root/workspace/Project1/src/Node.nc">
      <from><interface-ref name="doSparseEvents" scoped="" ref="0x40434040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:/root/workspace/Project1/src/Node.nc">
      <from><interface-ref name="doFrequentEvents" scoped="" ref="0x4042b0e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/root/workspace/Project1/src/Node.nc">
      <from><interface-ref name="doRareEvents" scoped="" ref="0x40433320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40370d30"/></to>
    </wire>
    <wire loc="53:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f5ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403704f8"/></to>
    </wire>
    <wire loc="55:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403769c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40386438"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="Node" loc="9:/root/workspace/Project1/src/Node.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x403a5a10" loc="12:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x403a5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403a5be8"/>
        <function-ref name="stopDone" scoped="" ref="0x403a5cc8"/>
        <function-ref name="start" scoped="" ref="0x403a5da8"/>
        <function-ref name="stop" scoped="" ref="0x403a5e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHandler" ref="0x403e7368" loc="17:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHandler" scoped="" ref="0x403e7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x403e7540"/>
        <function-ref name="reply" scoped="" ref="0x403e7620"/>
        <function-ref name="send" scoped="" ref="0x403e7700"/>
        <function-ref name="receive" scoped="" ref="0x403e77e0"/>
        <function-ref name="containsSrcSeqKey" scoped="" ref="0x403e78c0"/>
        <function-ref name="ageSequenceTable" scoped="" ref="0x403e79a0"/>
        <function-ref name="processSequence" scoped="" ref="0x403e7a80"/>
        <function-ref name="containsSrcSeqPair" scoped="" ref="0x403e7b60"/>
        <function-ref name="initialize" scoped="" ref="0x403e7c40"/>
        <function-ref name="insertAge" scoped="" ref="0x403e7d20"/>
        <function-ref name="getSeqSrcKeys" scoped="" ref="0x403e7e00"/>
        <function-ref name="decreaseAge" scoped="" ref="0x403e7ee0"/>
        <function-ref name="isPacketDuplicate" scoped="" ref="0x403a4010"/>
        <function-ref name="createAndSend" scoped="" ref="0x403a4170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403a73c8" loc="11:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a75a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="neighborTable" ref="0x4041d318" loc="28:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="neighborTable" scoped="" ref="0x4041d318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Hashmap"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4041dee0"/>
        <function-ref name="size" scoped="" ref="0x40418b28"/>
        <function-ref name="get" scoped="" ref="0x40418150"/>
        <function-ref name="isEmpty" scoped="" ref="0x404188d0"/>
        <function-ref name="remove" scoped="" ref="0x4041dc60"/>
        <function-ref name="insert" scoped="" ref="0x4041d940"/>
        <function-ref name="getKeys" scoped="" ref="0x40418d80"/>
        <function-ref name="contains" scoped="" ref="0x40418650"/>
        <function-ref name="getIndex" scoped="" ref="0x404183d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doModerateEvents" ref="0x4042a438" loc="110:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doModerateEvents" scoped="" ref="0x4042a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4042a610"/>
        <function-ref name="runTask" scoped="" ref="0x4042a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RareUpdate" ref="0x40413f28" loc="26:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RareUpdate" scoped="" ref="0x40413f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034d900"/>
            <typename><typedef-ref name="TMilli" ref="0x4034dac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40410a18"/>
        <function-ref name="fired" scoped="" ref="0x40412cb8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404103d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40410180"/>
        <function-ref name="getdt" scoped="" ref="0x40410ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40410c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40412f10"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40412560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404106f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404127e0"/>
        <function-ref name="stop" scoped="" ref="0x40412a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkStateRouting" ref="0x403f0010" loc="19:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkStateRouting" scoped="" ref="0x403f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkStateRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="insertCostHop" scoped="" ref="0x403f01e8"/>
        <function-ref name="getNeighborKeys" scoped="" ref="0x403f02c8"/>
        <function-ref name="printLinkState" scoped="" ref="0x403f03a8"/>
        <function-ref name="receive" scoped="" ref="0x403f0488"/>
        <function-ref name="calculateRoute" scoped="" ref="0x403f0568"/>
        <function-ref name="getRoutingHop" scoped="" ref="0x403f0648"/>
        <function-ref name="insertCost" scoped="" ref="0x403f0728"/>
        <function-ref name="clearRoutingTable" scoped="" ref="0x403f0808"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x403f08e8"/>
        <function-ref name="sendLinkState" scoped="" ref="0x403f09c8"/>
        <function-ref name="insertHop" scoped="" ref="0x403f0aa8"/>
        <function-ref name="initialize" scoped="" ref="0x403f0b88"/>
        <function-ref name="shareLinkState" scoped="" ref="0x403f0c68"/>
        <function-ref name="printRoutingTable" scoped="" ref="0x403f0dc8"/>
        <function-ref name="containsNeighbor" scoped="" ref="0x403f0ea8"/>
        <function-ref name="getRoutingCost" scoped="" ref="0x403f5010"/>
        <function-ref name="containsNode" scoped="" ref="0x403f50f0"/>
        <function-ref name="getRoutingKeys" scoped="" ref="0x403f51d0"/>
        <function-ref name="getNeighborConnection" scoped="" ref="0x403f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x404012c8" loc="22:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x404012c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x404014a0"/>
        <function-ref name="rand32" scoped="" ref="0x40401580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ModerateUpdate" ref="0x40402698" loc="24:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ModerateUpdate" scoped="" ref="0x40402698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034d900"/>
            <typename><typedef-ref name="TMilli" ref="0x4034dac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4040b248"/>
        <function-ref name="fired" scoped="" ref="0x4040d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4040dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4040d998"/>
        <function-ref name="getdt" scoped="" ref="0x4040b6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4040b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4040d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40402cc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4040df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4040d010"/>
        <function-ref name="stop" scoped="" ref="0x4040d290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x403d89a8" loc="13:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403d89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x403ec730" loc="18:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x403ec730"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="neighborChanged" scoped="" ref="0x403ec908"/>
        <function-ref name="getNeighborKeys" scoped="" ref="0x403ec9e8"/>
        <function-ref name="receive" scoped="" ref="0x403ecac8"/>
        <function-ref name="discoverNeighbors" scoped="" ref="0x403ecba8"/>
        <function-ref name="printNeighbors" scoped="" ref="0x403ecc88"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x403ecd68"/>
        <function-ref name="timeOutCheck" scoped="" ref="0x403ece48"/>
        <function-ref name="initialize" scoped="" ref="0x403ecf28"/>
        <function-ref name="containsNeighbor" scoped="" ref="0x403e5018"/>
        <function-ref name="getNeighborConnection" scoped="" ref="0x403e50f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doSparseEvents" ref="0x40434040" loc="126:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doSparseEvents" scoped="" ref="0x40434040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40434218"/>
        <function-ref name="runTask" scoped="" ref="0x404342f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sequenceTable" ref="0x4041c1d0" loc="29:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sequenceTable" scoped="" ref="0x4041c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Hashmap"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4041cd98"/>
        <function-ref name="size" scoped="" ref="0x4041b9e8"/>
        <function-ref name="get" scoped="" ref="0x4041b010"/>
        <function-ref name="isEmpty" scoped="" ref="0x4041b790"/>
        <function-ref name="remove" scoped="" ref="0x4041cb18"/>
        <function-ref name="insert" scoped="" ref="0x4041c7f8"/>
        <function-ref name="getKeys" scoped="" ref="0x4041bc40"/>
        <function-ref name="contains" scoped="" ref="0x4041b510"/>
        <function-ref name="getIndex" scoped="" ref="0x4041b290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sender" ref="0x403d9800" loc="14:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sender" scoped="" ref="0x403d9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SimpleSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403d99d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrequentUpdate" ref="0x4040e2c0" loc="23:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FrequentUpdate" scoped="" ref="0x4040e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034d900"/>
            <typename><typedef-ref name="TMilli" ref="0x4034dac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403ffdb0"/>
        <function-ref name="fired" scoped="" ref="0x403ff068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403ff770"/>
        <function-ref name="isOneShot" scoped="" ref="0x403ff518"/>
        <function-ref name="getdt" scoped="" ref="0x404022a0"/>
        <function-ref name="gett0" scoped="" ref="0x40402048"/>
        <function-ref name="isRunning" scoped="" ref="0x403ff2c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4040e8e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403ffa90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4040eb68"/>
        <function-ref name="stop" scoped="" ref="0x4040ede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TCP" ref="0x404039d0" loc="20:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCP" scoped="" ref="0x404039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TCP"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40403ba8"/>
        <function-ref name="updateHeader" scoped="" ref="0x40403c88"/>
        <function-ref name="getConnectionStatePTR" scoped="" ref="0x40403d68"/>
        <function-ref name="getConnectionState" scoped="" ref="0x40403e48"/>
        <function-ref name="containsConnection" scoped="" ref="0x40403f28"/>
        <function-ref name="setConnectionState" scoped="" ref="0x403f6018"/>
        <function-ref name="initialize" scoped="" ref="0x403f60f8"/>
        <function-ref name="getConnectionKeys" scoped="" ref="0x403f61d8"/>
        <function-ref name="getKeyFromHeaderData" scoped="" ref="0x403f62b8"/>
        <function-ref name="createAndSend" scoped="" ref="0x403f6398"/>
        <function-ref name="setConnectionPTR" scoped="" ref="0x403f6478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doFrequentEvents" ref="0x4042b0e0" loc="102:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doFrequentEvents" scoped="" ref="0x4042b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4042b2b8"/>
        <function-ref name="runTask" scoped="" ref="0x4042b398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="routingTable" ref="0x4041a0b0" loc="30:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="routingTable" scoped="" ref="0x4041a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Hashmap"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4041ac78"/>
        <function-ref name="size" scoped="" ref="0x404228c8"/>
        <function-ref name="get" scoped="" ref="0x4041aed0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40422670"/>
        <function-ref name="remove" scoped="" ref="0x4041a9f8"/>
        <function-ref name="insert" scoped="" ref="0x4041a6d8"/>
        <function-ref name="getKeys" scoped="" ref="0x40422b20"/>
        <function-ref name="contains" scoped="" ref="0x404223f0"/>
        <function-ref name="getIndex" scoped="" ref="0x40422170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doRareEvents" ref="0x40433320" loc="135:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doRareEvents" scoped="" ref="0x40433320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404334f8"/>
        <function-ref name="runTask" scoped="" ref="0x404335d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandHandler" ref="0x403e6b58" loc="16:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandHandler" scoped="" ref="0x403e6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommandHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403e6d30"/>
        <function-ref name="processCommand" scoped="" ref="0x403e6e10"/>
        <function-ref name="printLinkState" scoped="" ref="0x403e6ef0"/>
        <function-ref name="printNeighbors" scoped="" ref="0x4039f010"/>
        <function-ref name="printDistanceVector" scoped="" ref="0x4039f0f0"/>
        <function-ref name="setTestClient" scoped="" ref="0x4039f1d0"/>
        <function-ref name="setTestServer" scoped="" ref="0x4039f2b0"/>
        <function-ref name="setAppServer" scoped="" ref="0x4039f390"/>
        <function-ref name="printRouteTable" scoped="" ref="0x4039f470"/>
        <function-ref name="setAppClient" scoped="" ref="0x4039f550"/>
        <function-ref name="broadCast" scoped="" ref="0x4039f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TCPTablePTR" ref="0x40421010" loc="31:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPTablePTR" scoped="" ref="0x40421010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Hashmap"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:276" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039b010"/>
              <typename><typedef-ref name="socket_storage_t" ref="0x403a2710"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40421bd8"/>
        <function-ref name="size" scoped="" ref="0x40420830"/>
        <function-ref name="get" scoped="" ref="0x40421e30"/>
        <function-ref name="isEmpty" scoped="" ref="0x404205d8"/>
        <function-ref name="remove" scoped="" ref="0x40421958"/>
        <function-ref name="insert" scoped="" ref="0x40421638"/>
        <function-ref name="getKeys" scoped="" ref="0x40420a88"/>
        <function-ref name="contains" scoped="" ref="0x40420358"/>
        <function-ref name="getIndex" scoped="" ref="0x404200d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SparseUpdate" ref="0x4040bae0" loc="25:/root/workspace/Project1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SparseUpdate" scoped="" ref="0x4040bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034d900"/>
            <typename><typedef-ref name="TMilli" ref="0x4034dac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404136a8"/>
        <function-ref name="fired" scoped="" ref="0x4040a938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40413068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4040ade8"/>
        <function-ref name="getdt" scoped="" ref="0x40413b58"/>
        <function-ref name="gett0" scoped="" ref="0x40413900"/>
        <function-ref name="isRunning" scoped="" ref="0x4040ab90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4040a1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40413388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4040a460"/>
        <function-ref name="stop" scoped="" ref="0x4040a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fb600" loc="48:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402fb7d8"/>
        <function-ref name="runTask" scoped="" ref="0x402fb8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f5ed8" loc="47:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f5ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f70c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f71a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f7280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40370d30" loc="56:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40370d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40370f08"/>
        <function-ref name="runTask" scoped="" ref="0x40376010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403769c0" loc="57:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403769c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40376b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403704f8" loc="55:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403704f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403706d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403707b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40370890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40383f18" loc="54:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40383f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40385108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40386438" loc="50:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40386438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40386610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40383148" loc="51:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40383148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40383320"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403a6850" loc="113:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403a66f8" loc="113:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403a5730" loc="138:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403a55d8" loc="138:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403a6010" loc="104:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403a6d60" loc="130:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/root/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketHandler" loc="3:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
      <function event="" provided="0" name="getAge" ref="0x403ea520" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ea1d0" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403ea3c0" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="reply" ref="0x403eb928" loc="16:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x403eb7d0" loc="16:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="send" ref="0x403e2bc8" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e2640" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="address" ref="0x403e2858" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="updateTTL" ref="0x403e2a60" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403e42d0" loc="6:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e4178" loc="6:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="containsSrcSeqKey" ref="0x403e7200" loc="23:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403e70a8" loc="23:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ageSequenceTable" ref="0x403e4c90" loc="10:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="processSequence" ref="0x403e2290" loc="11:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e2138" loc="11:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="containsSrcSeqPair" ref="0x403e8bb0" loc="22:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403e8860" loc="22:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403e8a50" loc="22:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x4039fd10" loc="5:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="insertAge" ref="0x403eae40" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ea8f8" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403eaae8" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="age" ref="0x403eacd8" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSeqSrcKeys" ref="0x403ebd78" loc="18:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="decreaseAge" ref="0x403e8400" loc="21:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403e82a8" loc="21:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isPacketDuplicate" ref="0x403e4898" loc="8:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e4740" loc="8:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="createAndSend" ref="0x403eb3d0" loc="15:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x403eb030" loc="15:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="destination" ref="0x403eb270" loc="15:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/root/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="42:/root/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a7138" loc="60:/root/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="51:/root/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
      <parameters>
        <typedef name="t" ref="0x4040f3a0" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040f3a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40416410" loc="5:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40414ba8" loc="10:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40416910" loc="6:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040f3a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x404167b8" loc="6:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x404147d0" loc="9:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40416088" loc="4:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x4040ff18" loc="4:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x4040fb60" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040f3a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x4040f840" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x4040fa00" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040f3a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x4041d010" loc="11:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x40414408" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x404142b0" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40416e90" loc="7:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40416d38" loc="7:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fcb68" loc="67:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fb090" loc="75:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40401c78" loc="53:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40401c78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40406520" loc="136:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40408268" loc="83:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404073d0" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40407088" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40407270" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40408bb8" loc="98:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40406e98" loc="151:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40406968" loc="144:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404086f8" loc="92:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40409320" loc="64:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404091c8" loc="64:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40407db8" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40407a70" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40407c58" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404099b8" loc="73:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40409860" loc="73:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40409e88" loc="78:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkStateRouting" loc="3:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
      <function event="" provided="0" name="insertCostHop" ref="0x403f9968" loc="28:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f9410" loc="28:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="cost" ref="0x403f9610" loc="28:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="hop" ref="0x403f9800" loc="28:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getNeighborKeys" ref="0x403f3790" loc="18:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="printLinkState" ref="0x403f4968" loc="11:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403e5da0" loc="7:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e5c48" loc="7:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="calculateRoute" ref="0x403f4588" loc="9:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getRoutingHop" ref="0x403fabf8" loc="26:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403faaa0" loc="26:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="insertCost" ref="0x403f7170" loc="29:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f9d48" loc="29:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="cost" ref="0x403f7010" loc="29:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="clearRoutingTable" ref="0x403f9010" loc="27:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="insertNeighbor" ref="0x403f1568" loc="20:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f11d0" loc="20:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="connection" ref="0x403f1408" loc="20:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendLinkState" ref="0x403f3320" loc="15:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x403f31c8" loc="15:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="insertHop" ref="0x403f7898" loc="30:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f7548" loc="30:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="hop" ref="0x403f7738" loc="30:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x403e5828" loc="6:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="shareLinkState" ref="0x403f41a8" loc="8:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="printRoutingTable" ref="0x403f4d68" loc="12:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="containsNeighbor" ref="0x403f1b10" loc="21:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f19b8" loc="21:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getRoutingCost" ref="0x403fa5c8" loc="25:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403fa470" loc="25:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="containsNode" ref="0x403f7e18" loc="31:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f7cc0" loc="31:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getRoutingKeys" ref="0x403fa010" loc="24:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getNeighborConnection" ref="0x403f3d90" loc="19:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403f3c38" loc="19:/root/workspace/Project1/src/lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x404010c8" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="48:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x403f6bf0" loc="46:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="42:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x403daaf0" loc="78:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="58:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403dc308"/>
              <typename><typedef-ref name="message_t" ref="0x403da0c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403dc308"/>
                <typename><typedef-ref name="message_t" ref="0x403da0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403da5a8" loc="78:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403dc308"/>
                <typename><typedef-ref name="message_t" ref="0x403da0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403da788" loc="78:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403da968" loc="78:/root/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="3:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
      <function event="" provided="0" name="neighborChanged" ref="0x403ec5c8" loc="15:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getNeighborKeys" ref="0x403efe50" loc="11:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403a4a68" loc="5:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403a4910" loc="5:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="discoverNeighbors" ref="0x403ef9f0" loc="10:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="printNeighbors" ref="0x403ef5f0" loc="8:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="insertNeighbor" ref="0x403eec08" loc="13:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ee870" loc="13:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="connection" ref="0x403eeaa8" loc="13:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="timeOutCheck" ref="0x403ef210" loc="7:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x403a4e20" loc="6:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="containsNeighbor" ref="0x403ec1e0" loc="14:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ec088" loc="14:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getNeighborConnection" ref="0x403ee468" loc="12:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ee310" loc="12:/root/workspace/Project1/src/lib/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimpleSend" loc="3:/root/workspace/Project1/src/lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x403d9628" loc="5:/root/workspace/Project1/src/lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
              <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403d92c8" loc="5:/root/workspace/Project1/src/lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
              <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x403d94c8" loc="5:/root/workspace/Project1/src/lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TCP" loc="4:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
      <function command="" provided="0" name="receive" ref="0x403f5a78" loc="6:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403f5920" loc="6:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="updateHeader" ref="0x40403078" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x404046c8" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x404048b8" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x40404ac0" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x40404cc0" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x40404ed8" loc="20:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getConnectionStatePTR" ref="0x403fdcd0" loc="14:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:276" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039b010"/>
              <typename><typedef-ref name="socket_storage_t" ref="0x403a2710"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403fdb58" loc="14:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getConnectionState" ref="0x403fbbe0" loc="17:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:276" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039b010"/>
              <typename><typedef-ref name="socket_storage_t" ref="0x403a2710"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403fba68" loc="17:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="containsConnection" ref="0x40404268" loc="18:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x40404110" loc="18:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setConnectionState" ref="0x40403868" loc="21:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x40403510" loc="21:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x40403708" loc="21:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x403f5e30" loc="7:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getConnectionKeys" ref="0x403fd5f8" loc="13:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeyFromHeaderData" ref="0x403fe8a0" loc="8:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x403fe318" loc="8:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x403fe520" loc="8:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x403fe738" loc="8:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="createAndSend" ref="0x403fd170" loc="10:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039c040"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039cd30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="TCPHeader" ref="0x403fed30" loc="10:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039c040"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039cd30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="destination" ref="0x403fd010" loc="10:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setConnectionPTR" ref="0x403fb528" loc="15:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
        <interfacedef-ref qname="TCP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403fb188" loc="15:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="initialState" ref="0x403fb3c8" loc="15:/root/workspace/Project1/src/lib/interfaces/TCP.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="3:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
      <function command="" provided="0" name="receive" ref="0x403e0290" loc="5:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e0138" loc="5:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="processCommand" ref="0x403e0850" loc="6:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403e06f8" loc="6:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x403944c8"/>
                <typename><typedef-ref name="pack" ref="0x403931e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="printLinkState" ref="0x403dfc08" loc="15:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x403df440" loc="13:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x403dd038" loc="16:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x403e6250" loc="19:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="targetAddress" ref="0x403dda30" loc="19:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="sendPort" ref="0x403ddc48" loc="19:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x403dde60" loc="19:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="transfer" ref="0x403e60e0" loc="19:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x403dd5c8" loc="18:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="listenPort" ref="0x403dd470" loc="18:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x403e6620" loc="20:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x403df828" loc="14:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x403e69f0" loc="21:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="broadCast" ref="0x403df060" loc="11:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x403e0c90" loc="11:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="destination" ref="0x403e0ed0" loc="11:/root/workspace/Project1/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402f5390" loc="57:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f5c98" loc="72:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f57d0" loc="65:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403767e8" loc="76:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/root/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40383bb8" loc="62:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40335340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40386e78" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
