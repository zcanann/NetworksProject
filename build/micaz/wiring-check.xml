<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="91:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <from><interface-ref name="sendData" scoped="" ref="0x403e21e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40370d30"/></to>
    </wire>
    <wire loc="53:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f5ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403704f8"/></to>
    </wire>
    <wire loc="55:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403769c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40386438"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DataTransferP" loc="5:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="PacketHandler" ref="0x403b02d0" loc="8:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHandler" scoped="" ref="0x403b02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x403b04a8"/>
        <function-ref name="reply" scoped="" ref="0x403b0588"/>
        <function-ref name="send" scoped="" ref="0x403b0668"/>
        <function-ref name="receive" scoped="" ref="0x403b0748"/>
        <function-ref name="makePack" scoped="" ref="0x403b0828"/>
        <function-ref name="ageSequenceTable" scoped="" ref="0x403b0908"/>
        <function-ref name="containsSrcSeqPair" scoped="" ref="0x403b09e8"/>
        <function-ref name="processSequence" scoped="" ref="0x403b0ac8"/>
        <function-ref name="initialize" scoped="" ref="0x403b0ba8"/>
        <function-ref name="actuallySend" scoped="" ref="0x403b0c88"/>
        <function-ref name="insertAge" scoped="" ref="0x403b0d68"/>
        <function-ref name="decreaseAge" scoped="" ref="0x403b0e48"/>
        <function-ref name="isPacketDuplicate" scoped="" ref="0x403b0f28"/>
        <function-ref name="postSendTask" scoped="" ref="0x4039f098"/>
        <function-ref name="createAndSend" scoped="" ref="0x4039f178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteTimer" ref="0x403c1298" loc="12:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteTimer" scoped="" ref="0x403c1298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034d900"/>
            <typename><typedef-ref name="TMilli" ref="0x4034dac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403bfd90"/>
        <function-ref name="fired" scoped="" ref="0x403bf048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403bf750"/>
        <function-ref name="isOneShot" scoped="" ref="0x403bf4f8"/>
        <function-ref name="getdt" scoped="" ref="0x403be268"/>
        <function-ref name="gett0" scoped="" ref="0x403be010"/>
        <function-ref name="isRunning" scoped="" ref="0x403bf2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403c18c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403bfa70"/>
        <function-ref name="startOneShot" scoped="" ref="0x403c1b40"/>
        <function-ref name="stop" scoped="" ref="0x403c1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x403bd410" loc="11:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x403bd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x403bd5e8"/>
        <function-ref name="rand32" scoped="" ref="0x403bd6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendData" ref="0x403e21e0" loc="91:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendData" scoped="" ref="0x403e21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403e23b8"/>
        <function-ref name="runTask" scoped="" ref="0x403e2498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTransfer" ref="0x403a4560" loc="7:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTransfer" scoped="" ref="0x403a4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="fillWriteBuffer" scoped="" ref="0x403a4738"/>
        <function-ref name="receive" scoped="" ref="0x403a4818"/>
        <function-ref name="processACK" scoped="" ref="0x403a48f8"/>
        <function-ref name="initialize" scoped="" ref="0x403a49d8"/>
        <function-ref name="updateTransferAmount" scoped="" ref="0x403a4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Transport" ref="0x403b7ee8" loc="9:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Transport" scoped="" ref="0x403b7ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Transport"/>
      </instance>
      <interface-functions>
        <function-ref name="printConnectionStates" scoped="" ref="0x403a70e0"/>
        <function-ref name="receiveSyn" scoped="" ref="0x403a71c0"/>
        <function-ref name="listen" scoped="" ref="0x403a72a0"/>
        <function-ref name="updateHeader" scoped="" ref="0x403a7380"/>
        <function-ref name="receive" scoped="" ref="0x403a7460"/>
        <function-ref name="resendSynAck" scoped="" ref="0x403a7540"/>
        <function-ref name="isConnectedTo" scoped="" ref="0x403a7620"/>
        <function-ref name="getConnectionState" scoped="" ref="0x403a7700"/>
        <function-ref name="release" scoped="" ref="0x403a77e0"/>
        <function-ref name="bind" scoped="" ref="0x403a78c0"/>
        <function-ref name="setConnectionState" scoped="" ref="0x403a79a0"/>
        <function-ref name="read" scoped="" ref="0x403a7a80"/>
        <function-ref name="isPortInUse" scoped="" ref="0x403a7b60"/>
        <function-ref name="receiveAck" scoped="" ref="0x403a7cc0"/>
        <function-ref name="connect" scoped="" ref="0x403a7da0"/>
        <function-ref name="accept" scoped="" ref="0x403a7e80"/>
        <function-ref name="initialize" scoped="" ref="0x403ae010"/>
        <function-ref name="receiveSynAck" scoped="" ref="0x403ae0f0"/>
        <function-ref name="getSocket" scoped="" ref="0x403ae1d0"/>
        <function-ref name="write" scoped="" ref="0x403ae2b0"/>
        <function-ref name="close" scoped="" ref="0x403ae390"/>
        <function-ref name="createAndSend" scoped="" ref="0x403ae470"/>
        <function-ref name="setConnectionPTR" scoped="" ref="0x403ae550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="slidingWindow" ref="0x403d2740" loc="14:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="slidingWindow" scoped="" ref="0x403d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="List"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="pointTo" scoped="" ref="0x403cde48"/>
        <function-ref name="size" scoped="" ref="0x403d11e8"/>
        <function-ref name="front" scoped="" ref="0x403cd740"/>
        <function-ref name="isEmpty" scoped="" ref="0x403cdbf0"/>
        <function-ref name="get" scoped="" ref="0x403d1440"/>
        <function-ref name="pushback" scoped="" ref="0x403d2d68"/>
        <function-ref name="popfront" scoped="" ref="0x403cd4e8"/>
        <function-ref name="popback" scoped="" ref="0x403cd290"/>
        <function-ref name="pushfront" scoped="" ref="0x403cd010"/>
        <function-ref name="back" scoped="" ref="0x403cd998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TCPTablePTR" ref="0x403cf6a0" loc="13:/root/workspace/Project1/src/lib/modules/DataTransferP.nc">
      <component-ref qname="DataTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPTablePTR" scoped="" ref="0x403cf6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Hashmap"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
              <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x403ca290"/>
        <function-ref name="size" scoped="" ref="0x403caec0"/>
        <function-ref name="get" scoped="" ref="0x403ca4e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x403cac68"/>
        <function-ref name="remove" scoped="" ref="0x403ca010"/>
        <function-ref name="insert" scoped="" ref="0x403cfcc8"/>
        <function-ref name="getKeys" scoped="" ref="0x403ce130"/>
        <function-ref name="contains" scoped="" ref="0x403ca9e8"/>
        <function-ref name="getIndex" scoped="" ref="0x403ca768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fb600" loc="48:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402fb7d8"/>
        <function-ref name="runTask" scoped="" ref="0x402fb8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f5ed8" loc="47:/root/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f5ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f70c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f71a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f7280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40370d30" loc="56:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40370d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40370f08"/>
        <function-ref name="runTask" scoped="" ref="0x40376010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403769c0" loc="57:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403769c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40376b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403704f8" loc="55:/root/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403704f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403706d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403707b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40370890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40383f18" loc="54:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40383f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40385108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40386438" loc="50:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40386438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40386610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40383148" loc="51:/root/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40383148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40383320"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="PacketHandler" loc="3:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
      <function command="" provided="0" name="getAge" ref="0x403a84b0" loc="18:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403a8160" loc="18:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403a8350" loc="18:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reply" ref="0x403a9908" loc="15:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x403a97b0" loc="15:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x403acde8" loc="11:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x403aca80" loc="11:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="updateTTL" ref="0x403acc88" loc="11:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403a3720" loc="7:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403a35c8" loc="7:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makePack" ref="0x403ac680" loc="9:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x403ac0d8" loc="9:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="protocol" ref="0x403ac2f0" loc="9:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x403ac518" loc="9:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ageSequenceTable" ref="0x403a9d00" loc="17:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="containsSrcSeqPair" ref="0x403b1b58" loc="21:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403b1808" loc="21:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403b19f8" loc="21:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="processSequence" ref="0x403b0168" loc="22:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Package" ref="0x403b0010" loc="22:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x403a31a8" loc="5:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="actuallySend" ref="0x403ab7b0" loc="12:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403ab238" loc="12:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x403ab438" loc="12:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x403ab648" loc="12:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertAge" ref="0x403a8dd0" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x403a8888" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x403a8a78" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="age" ref="0x403a8c68" loc="19:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="decreaseAge" ref="0x403b1328" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403b11d0" loc="20:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isPacketDuplicate" ref="0x403a3ce8" loc="8:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403a3b90" loc="8:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postSendTask" ref="0x403abb80" loc="13:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAndSend" ref="0x403a93b0" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
        <interfacedef-ref qname="PacketHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x403a9010" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="destination" ref="0x403a9250" loc="14:/root/workspace/Project1/src/lib/interfaces/PacketHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403bddc0" loc="53:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403bddc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x403c2550" loc="136:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x403c53d8" loc="83:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x403c4530" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403c41e8" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403c43d0" loc="114:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403c5d28" loc="98:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403c2ec8" loc="151:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403c2998" loc="144:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x403c5868" loc="92:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403bc430" loc="64:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403bc2d8" loc="64:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403c4f18" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403c4bd0" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403c4db8" loc="129:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403bcac8" loc="73:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403bc970" loc="73:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403c5010" loc="78:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/root/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="34:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x403bd210" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="48:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x403aed38" loc="46:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="42:/root/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fcb68" loc="67:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fb090" loc="75:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/root/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTransfer" loc="4:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
      <function command="" provided="0" name="fillWriteBuffer" ref="0x403a6e30" loc="9:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
        <interfacedef-ref qname="DataTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionData" ref="0x403a6cd8" loc="9:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403a43f8" loc="11:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
        <interfacedef-ref qname="DataTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x403a42a0" loc="11:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="processACK" ref="0x403a67e8" loc="8:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
        <interfacedef-ref qname="DataTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:30" alignment="I:1"><struct-ref name="transfer_packet" ref="0x4039d238"/>
                <typename><typedef-ref name="transfer_packet" ref="0x4039c010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionData" ref="0x403a63f0" loc="8:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="TCPPayload" ref="0x403a6688" loc="8:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:30" alignment="I:1"><struct-ref name="transfer_packet" ref="0x4039d238"/>
                <typename><typedef-ref name="transfer_packet" ref="0x4039c010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x403a0650" loc="6:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
        <interfacedef-ref qname="DataTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:30" alignment="I:1"><struct-ref name="transfer_packet" ref="0x4039d238"/>
                <typename><typedef-ref name="transfer_packet" ref="0x4039c010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="TCPPacketPtr" ref="0x403a04f8" loc="6:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:30" alignment="I:1"><struct-ref name="transfer_packet" ref="0x4039d238"/>
                <typename><typedef-ref name="transfer_packet" ref="0x4039c010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTransferAmount" ref="0x403a0f00" loc="7:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
        <interfacedef-ref qname="DataTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionData" ref="0x403a0b78" loc="7:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="transfer" ref="0x403a0da0" loc="7:/root/workspace/Project1/src/lib/interfaces/DataTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Transport" loc="18:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
      <documentation loc="4:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <short>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP.</short>
        <long>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP. This will be used by the application layer to set up TCP&#10; packets. Internally the system will be handling syn/ack/data/fin&#10; Transport packets.&#10;&#10; @project&#10;   Transmission Control Protocol&#10; @author&#10;      Alex Beltran - abeltran2@ucmerced.edu&#10; @date&#10;   2013/11/12&#10;</long>
      </documentation>
      <function command="" provided="0" name="printConnectionStates" ref="0x4039fde8" loc="21:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveSyn" ref="0x403b2168" loc="36:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403b2010" loc="36:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x403b8a20" loc="47:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="socket" ref="0x403b88c8" loc="47:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateHeader" ref="0x403b5df0" loc="31:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x403b5c98" loc="31:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403b3bb0" loc="35:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x403b3a58" loc="35:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendSynAck" ref="0x403ad1c8" loc="22:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConnectedTo" ref="0x403b68c0" loc="27:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b6768" loc="27:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getConnectionState" ref="0x403b5828" loc="30:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
              <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403b56b0" loc="30:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x403b9ea0" loc="45:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b9d48" loc="45:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x403b92f8" loc="42:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403bbf08" loc="42:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="initialState" ref="0x403b9198" loc="43:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setConnectionState" ref="0x403b3620" loc="32:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403b32a0" loc="32:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x403b34c0" loc="32:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x403b7d80" loc="75:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x403b77f0" loc="75:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x403b7a00" loc="75:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x403b7c18" loc="75:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isPortInUse" ref="0x403b62d8" loc="26:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b6180" loc="26:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAck" ref="0x403b2ca8" loc="38:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403b2b50" loc="38:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x403bb508" loc="40:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403bb180" loc="40:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="transfer" ref="0x403bb3a8" loc="40:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x403b84a8" loc="46:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b8350" loc="46:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initialize" ref="0x4039f9c0" loc="20:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveSynAck" ref="0x403b26d8" loc="37:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Packet" ref="0x403b2580" loc="37:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x40396a48"/>
                <typename><typedef-ref name="pack" ref="0x40395760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSocket" ref="0x403b98e0" loc="44:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b9788" loc="44:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x403b73e8" loc="61:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x403b8e30" loc="61:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403a2c40"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x403b7068" loc="61:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x403b7280" loc="61:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x403bbab8" loc="41:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403bb960" loc="41:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x4039e660"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x4039d010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAndSend" ref="0x403adcd0" loc="23:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f8628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="transferProtocol" ref="0x40398760"/>
              <typename><typedef-ref name="transferProtocol" ref="0x40397200"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionData" ref="0x403ad6f0" loc="23:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:416" alignment="I:1"><struct-ref name="socket_storage_t" ref="0x4039c248"/>
                <typename><typedef-ref name="socket_storage_t" ref="0x403a29e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x403ad968" loc="23:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="transferProtocol" ref="0x40398760"/>
              <typename><typedef-ref name="transferProtocol" ref="0x40397200"/></typename>
            </type-tag>
          </variable>
          <variable name="offset" ref="0x403adb68" loc="23:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setConnectionPTR" ref="0x403b5170" loc="28:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="connectionKey" ref="0x403b6d48" loc="28:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="initialState" ref="0x403b5010" loc="29:/root/workspace/Project1/src/lib/interfaces/Transport.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="socketState" ref="0x4039abd0"/>
              <typename><typedef-ref name="socketState" ref="0x40398528"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
      <parameters>
        <typedef name="t" ref="0x403ce5b0" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="pointTo" ref="0x403d3b20" loc="15:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x403d3788" loc="15:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="newSize" ref="0x403d39c0" loc="15:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x403d3ef8" loc="16:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0x403cbc60" loc="12:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x403d33d8" loc="14:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403d2448" loc="17:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x403d22f0" loc="17:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0x403ceba0" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <documentation loc="3:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x403cea48" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0x403cb8c8" loc="11:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0x403cb510" loc="10:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0x403cb168" loc="9:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x403cb010" loc="9:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0x403d3010" loc="13:/root/workspace/Project1/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403ce5b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
      <parameters>
        <typedef name="t" ref="0x403be700" loc="1:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403be700"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x403c7778" loc="5:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x403c6f18" loc="10:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403c7c78" loc="6:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403be700"/></type-var>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403c7b20" loc="6:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x403c6b40" loc="9:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x403c73f0" loc="4:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403c7298" loc="4:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x403beec0" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403be700"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403beba0" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x403bed60" loc="3:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403be700"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x403cf340" loc="11:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x403c6778" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403c6620" loc="8:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x403c6220" loc="7:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x403c60c8" loc="7:/root/workspace/Project1/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402f5390" loc="57:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f5c98" loc="72:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f57d0" loc="65:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/root/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f46e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403767e8" loc="76:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/root/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/root/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40383bb8" loc="62:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40335340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40386e78" loc="52:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/root/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
